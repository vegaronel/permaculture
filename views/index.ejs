<%- include("partials/UserHeader.ejs") %>

<!-- Page Content -->
<div class="container-fluid hidden-scroll"> 

    <section class="weather-section">
        <div class="row nexa-black gap-4 d-flex justify-content-center m-2">
            <div class="col-lg-7 d-flex gap-3 flex-column">
                <div class="p-4 center-items weather-card b-radius-50">
                    <div>
                        <div class="d-flex align-items-center">
                            <img src="images/location-icon.svg" alt="">
                            <p class="h2 fs-30 m-0">Vinzons, Camarines Norte</p>
                        </div>
                        <p class="arial fs-14"><strong><%= day %>,</strong>  <%= dateToday %></p>
                        <p class="fs-80"><%= Math.floor(weather.main.temp)  %>°</p>
                    </div>
                    <div>
                        <img src="images/weather-icons/<%= weatherIcon %>.svg" alt="Weather Icon" style="width: 100%; min-width: 170px;">
                    </div>
                </div>

                <div class="arial p-4 weather-card b-radius-50">
                    <div class="p-3">
                        <h3>5-Day Forecast</h3>
                    </div>
                    <div class="px-2 overflow-x-auto">                
                        <div class="forecast-container d-flex justify-content-around">
                            <% forecast.forEach(day => { %>
                                <div class="forecast-day d-flex justify-content-center flex-column align-items-center">
                                    <p><%= new Date(day.dt_txt).toLocaleDateString('en-US', { weekday: 'long' }) %></p>
                                    <img style="width: 100px; height: 100px; background-size: cover;" src="images/weather-icons/<%= day.weather[0].icon %>.svg" alt="Weather Icon">
                                    <p><%= Math.floor(day.main.temp) %> °C</p>
                                </div>
                            <% }) %>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-4 p-4 weather-card b-radius-50">
                <div class="d-flex align-items-center">
                    <img src="/images/todo-icon.svg" alt="">
                    <p class="m-0 gray-text todo-text">To do list</p>
                </div>
                <div class="px-4" style="height: 370px;overflow-y: scroll;">
                    <% if (tasks && tasks.length > 0) { %>
                        <ul class="list-group">
                            <% tasks.forEach(task => { %>
                                <li class="list-group-item d-flex flex-lg-row justify-content-between align-items-center flex-sm-column">
                                    <div>
                                        <strong><%= task.title %></strong><br>
                                        <small><%= task.description %></small>
                                    </div>
                                    <span class="badge badge-pill text-black">
                                        Due: <%= new Date(task.dueDate).toLocaleDateString('en-PH') %>
                                    </span>
                                </li>
                            <% }) %>
                        </ul>
                    <% } else { %>
                        <p class="text-muted">No tasks to complete.</p>
                    <% } %>
                </div>
                
            </div>
        </div>    
    </section>

    <section id="my-plants">
        <div class="row gap-4 mt-3 d-flex justify-content-center mx-2">
            <div class="col-lg-7 col-md-12 d-flex gap-3 flex-column">
                <div class="col p-4 weather-card b-radius-50 ">
                    <p class="h5">Plants That Need to Be Watered</p>
                    <% if(locals.plant) { %>
                        <div class="container-water d-flex gap-3">
                            <% plants.filter(plant => plant.needsWatering).forEach(plant => { %>
                                <div class="not-watered-plants">
                                    <%= plant.name %>
                                    <form action="/water-plant/<%= plant._id %>" method="POST" style="display: inline">
                                        <button type="submit" class="btn btn-success btn-sm ml-2">Water</button>
                                    </form>
                                    <p style="width: 300px;">Last Watered: <%= plant.lastWatered ? new Date(plant.lastWatered).toLocaleDateString() : 'Not yet watered' %></p>
                                </div>
                            <% }) %>
                        </div>
                    <% } %>
                  

                    <div class="d-flex align-items-center mt-2">
                        <img src="/images/my-plants.svg" alt="">
                        <p class="h5 m-0">My Plants</p>
                    </div>

                    <div class="table-responsive">
                        <% if (plants && plants.length > 0) { %>
                            <table id="plantsTable" class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Image</th>
                                        <th>Plant Name</th>
                                        <th>Date Planted</th>
                                        <th>Status</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% plants.forEach(plant => { %>
                                        <tr>
                                            <td><img src="<%= plant.image %>" alt="" width="70px"></td>
                                            <td><%= plant.name %></td>
                                            <td><%= new Date(plant.plantingDate).toLocaleDateString('en-GB', {day: '2-digit', month: '2-digit', year: 'numeric'}) %></td>
                                            <td><%= plant.status %></td>            
                                            <td>
                                                <button class="btn btn-primary view-plant" data-custom-id="<%= plant.customId %>">View</button>

                                            </td>                             
                                        </tr>
                                    <% }) %>
                                </tbody>
                            </table>
                        <% } else { %>
                            <p>No plants found. Start by adding a new plant!</p>
                        <% } %>
                    </div>
                </div>
            </div>

            <div class="col-lg-4 col-md-12 p-4 weather-card b-radius-50">
                <div class="p-4">
                    <h5>Soil Moisture Data</h5>
                </div>
              
                <div id="soilMoistureContainer" style="overflow: scroll; height: 370px;" class="d-flex flex-column"></div>
            </div>
        </div>    
    </section>

    <!-- Modal -->
<div class="modal fade" id="plantDetailsModal" tabindex="-1" aria-labelledby="plantDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="plantDetailsModalLabel">Plant Details</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
            <div class="mt-3">
                <label><strong>Growth Progress:</strong></label>
                <div class="d-flex align-items-center">
                    <i class="fas fa-seedling me-2" style="font-size: 1.5rem;" aria-hidden="true"></i> <!-- Left Icon -->
                    <div class="progress flex-grow-1">
                        <div id="growthProgressBar" class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
                    </div>
                    <i class="fas fa-leaf ms-2" style="font-size: 1.5rem;" aria-hidden="true"></i> <!-- Right Icon -->
                </div>
            </div>
            
          <p><strong>Plant name:</strong> <span id="plantName"></span></p>
          <p><strong>Estimated Harvest Time:</strong> <span id="plantHarvestTime"></span></p>
          <p><strong>Method of Planting:</strong> <span id="methodOfPlanting"></span></p>
          <p><strong>Location:</strong> <span id="plantLocation"></span></p>
          <p><strong>Growth Stage:</strong> <span id="plantGrowthStage"></span></p>
          <p><strong>Status:</strong> <span id="plantStatus"></span></p>
          <p><strong>Date Planted:</strong> <span id="datePlanted"></span></p>
          <img id="plantImage" src="" alt="Plant Image" class="img-fluid" />

          <div class="form-group d-flex">
            <div>
                <label for="harvestStatus" class="form-label">In case you want to Harvest</label>
                <select name="harvestStatus" class="form-control" id="harvestStatus">
                    <option value="">Select Quality</option>
                    <option value="Premium">Premium</option>
                    <option value="Good">Good</option>
                    <option value="Acceptable">Acceptable</option>
                    <option value="Low">Low</option>
                </select>
            </div>
            <div class="d-flex align-items-end">
                <button class="btn border" id="harvestButton">Harvest</button>
            </div>        
        </div>

        <div class="form-group d-flex">
            <div>
                <label for="plantDied" class="form-label">In case the plant died</label>
                <select name="plantDied" class="form-control" id="plantDied">
                    <option value="">Select Reason</option>
                    <option value="Poor Soil Quality">Poor Soil Quality</option>
                    <option value="Inadequate Watering">Inadequate Watering</option>
                    <option value="Pests and Diseases">Pests and Diseases</option>
                    <option value="Improper Sunlight and Temperature">Improper Sunlight and Temperature</option>
                    <option value="Negligence">Negligence</option>
                </select>
            </div>
            <div class="d-flex align-items-end">
                <button class="btn btn-danger" id="plantDiedButton">Plant Died</button>
            </div>        
        </div>
          <div class="mt-4">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Back</button>
          </div>
        </div>
      </div>
    </div>
  </div>
  

</div>
<!-- /#page-content-wrapper -->
</div>
<%- include("partials/UserFooter.ejs") %>
<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();
    const userId = '<%= userId %>'; // Get the userId from the server-side render
    socket.on('soilMoistureUpdate', (data) => {
    const $container = $('#soilMoistureContainer');
    if (!$container.length) return;

    $.each(data, (sensorId, sensorData) => {
        if (sensorData.userId === userId) {
            const moistureValue = sensorData.moistureValue;
            const locDat = sensorData.locationName;

            let statusText;
            let statusClass = '';

            // Define status and status class based on moisture value
            if (moistureValue < 30) {
                statusText = 'Soil is Dry';
                statusClass = 'text-white';
            } else if (moistureValue < 45) {
                statusText = 'Soil is Moist';
                statusClass = 'text-white';
            } else if (moistureValue < 60) {
                statusText = 'Soil is Damp';
                statusClass = 'text-white';
            } else {
                statusText = 'Soil is Wet';
                statusClass = 'text-white';
            }

            let $card = $container.find(`.card[data-location="${locDat}"]`);

            if ($card.length) {
                // Update the percentage, status text, and background gradient
                $card.find('.percentage').text(`${moistureValue}%`);
                $card.find('.status-text').text(statusText);
                $card.find('.status-text').attr('class', `status-text ${statusClass}`); // Update the text class
                $card.css('background', `linear-gradient(${getGradient(moistureValue)})`); // Update the background
            } else {
                // Create a new card with the proper gradient and text class
                $card = $(`
                    <div class="card mb-3 p-4 shadow-none" data-location="${locDat}" style="border-radius: 20px; background: linear-gradient(${getGradient(moistureValue)});">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h5 class="location-name mb-2">${locDat}</h5>
                                <p class="action-text text-muted">No Action Needed</p>
                            </div>
                            <div class="d-flex flex-column justify-content-center">
                                <h1 class="percentage" style="font-weight: bold; color: #fff;">${moistureValue}%</h1>
                                <span class="status-text ${statusClass}" style="font-size: 16px;">${statusText}</span>
                            </div>
                        </div>
                    </div>
                `);

                $container.append($card);
            }

            // Smooth update animation
            $card.find('.percentage').css({
                'transition': 'all 1s ease-in-out'
            });
        }
    });
});


$(document).ready(function() {

let customPlantID = '';

    // Initialize DataTable
    const plantsTable = $('#plantsTable').DataTable({
        "paging": true,   
        "searching": true,   
        "lengthChange": false,
        "pageLength": 5
    });

    $('#harvestButton').click(function() {
    const harvestQuality = $('#harvestStatus').val();
    
    if (harvestQuality) {
        $.ajax({
            url: `/plant/harvest/${customPlantID}`,
            method: 'POST',
            data: { harvestStatus: harvestQuality },
            success: function(response) {
                if (response.success) {
                    alert('Plant harvested successfully!');
                    updatePlantsTable(); // Update the table after successful harvest
                } else {
                    alert('Failed to update plant status.');
                }
            },
            error: function() {
                alert('Error processing the request.');
            }
        });
    } else {
        alert('Please select a harvest quality.');
    }
});

$('#plantDiedButton').click(function() {
    const reasonForDying = $('#plantDied').val();
    
    if (reasonForDying) {
        $.ajax({
            url: `/plant/died/${customPlantID}`,
            method: 'POST',
            data: { plantDied: reasonForDying },
            success: function(response) {
                if (response.success) {
                    alert('Plant status updated as died!');
                    updatePlantsTable(); // Update the table after plant status is updated
                } else {
                    alert('Failed to update plant status.');
                }
            },
            error: function() {
                alert('Error processing the request.');
            }
        });
    } else {
        alert('Please select a reason for plant death.');
    }
});

  // Use event delegation for the "View" button click event
  $('#plantsTable').on('click', '.view-plant', function() {
        const customId = $(this).data('custom-id');
        fetchPlantDetails(customId);
    });

    function fetchPlantDetails(customId) {
        $.ajax({
            url: `/plant/${customId}`,
            method: 'GET',
            success: function(response) {
                if (response.success) {
                    const plant = response.plant;
                    // Fill the modal with plant data
                    customPlantID = customId;
                    $('#plantName').text(plant.name);
                    $('#plantHarvestTime').text(new Date(plant.estimatedHarvestTime).toLocaleDateString());
                    $('#methodOfPlanting').text(plant.methodOfPlanting);
                    $('#plantLocation').text(plant.location ? plant.location.name : 'N/A');
                    $('#plantGrowthStage').text(plant.growthStage);
                    $('#plantStatus').text(plant.status);
                    $('#plantImage').attr('src', plant.image);
                    $("#datePlanted").text(new Date(plant.plantingDate).toLocaleDateString('en-GB', { month: 'long', day: '2-digit', year: 'numeric'}));

                    // Calculate and update progress bar
                    updateProgressBar(plant.plantingDate, plant.estimatedHarvestTime);

                    // Show the modal
                    $('#plantDetailsModal').modal('show');
                } else {
                    alert('Plant not found!');
                }
            },
            error: function() {
                alert('Error fetching plant details.');
            }
        });
    }

    function updateProgressBar(plantingDate, harvestDate) {
        const plantingDateObj = new Date(plantingDate);
        const harvestDateObj = new Date(harvestDate);
        const today = new Date();

        const totalDuration = harvestDateObj - plantingDateObj;
        const elapsedDuration = today - plantingDateObj;

        let progressPercentage = (elapsedDuration / totalDuration) * 100;
        progressPercentage = Math.max(0, Math.min(progressPercentage, 100));

        $('#growthProgressBar').css('width', progressPercentage + '%');
        $('#growthProgressBar').attr('aria-valuenow', progressPercentage);
        $('#growthProgressBar').text(Math.round(progressPercentage) + '%');
    }

    function updatePlantsTable() {
    $.ajax({
        url: '/plants', // The endpoint we created to fetch plant data
        method: 'GET',
        success: function(response) {
            if (response.success) {
                const plants = response.plants;
                const tableBody = $('#plantsTable tbody');
                tableBody.empty(); // Clear existing rows

                plants.forEach(plant => {
                    const row = `
                        <tr>
                            <td><img src="${plant.image}" alt="" width="70px"></td>
                            <td>${plant.name}</td>
                            <td>${new Date(plant.plantingDate).toLocaleDateString('en-GB', { day: '2-digit', month: '2-digit', year: 'numeric' })}</td>
                            <td>${plant.status}</td>
                            <td>
                                <button class="btn btn-primary view-plant" data-custom-id="${plant.customId}">View</button>
                            </td>
                        </tr>
                    `;
                    tableBody.append(row);
                });
            } else {
                alert('Failed to fetch updated plant data.');
            }
        },
        error: function() {
            alert('Error updating the plant table.');
        }
    });
}


    
});


function getGradient(moistureValue) {
    if (moistureValue < 30) {
        return 'to bottom right, rgba(220, 53, 69, 1) 35%, rgba(255, 255, 255, 0) 100%';
    } else if (moistureValue < 45) {
        return 'to bottom right, rgba(255, 193, 7, 1) 35%, rgba(255, 255, 255, 0) 100%'; 
    } else if (moistureValue < 60) {
        return 'to bottom right, rgba(67, 181, 229, 1) 35%, rgba(255, 255, 255, 0) 100%'; 
    } else {
        return 'to bottom right, rgba(40, 167, 69, 1) 35%, rgba(255, 255, 255, 0) 100%'; 
    }
}

</script>
